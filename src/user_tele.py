# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'user_tele.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

from bd import bd
import vglobal
from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtCore import Qt, QThread, pyqtSignal
from PyQt5.QtWidgets import QApplication, QWidget, QTableWidget, QTableWidgetItem,QCheckBox, QMessageBox
from user_tele_cad import Ui_Form_user_tele_cad
from user_tele_update import Ui_Form_user_tele_update


class Ui_Form_user_tele(object):
    def setupUi(self, Form):
        Form.setObjectName("Form")
        Form.resize(600, 481)
        Form.setMaximumSize(QtCore.QSize(600, 500))
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap(":/soui/sou.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        Form.setWindowIcon(icon)
        Form.setStyleSheet("QWidget#Form{\n"
"background-image: url(:/fundo/fundo.png);\n"
"}\n"
"")
        self.verticalLayout = QtWidgets.QVBoxLayout(Form)
        self.verticalLayout.setObjectName("verticalLayout")
        self.frame = QtWidgets.QFrame(Form)
        self.frame.setStyleSheet("QFrame#frame{\n"
"background-color: rgb(255, 255, 255);\n"
"border-radius: 3px;\n"
"}")
        self.frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame.setObjectName("frame")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.frame)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.frame_2 = QtWidgets.QFrame(self.frame)
        self.frame_2.setMinimumSize(QtCore.QSize(0, 60))
        self.frame_2.setMaximumSize(QtCore.QSize(16777215, 60))
        self.frame_2.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_2.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_2.setObjectName("frame_2")
        self.bt_cadastrar = QtWidgets.QPushButton(self.frame_2)
        self.bt_cadastrar.setGeometry(QtCore.QRect(386, 10, 75, 23))
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap(":/buscar/cadastrar.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.bt_cadastrar.setIcon(icon1)
        self.bt_cadastrar.setObjectName("bt_cadastrar")
        self.bt_editar = QtWidgets.QPushButton(self.frame_2)
        self.bt_editar.setGeometry(QtCore.QRect(476, 10, 75, 23))
        icon2 = QtGui.QIcon()
        icon2.addPixmap(QtGui.QPixmap(":/buscar/editar.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.bt_editar.setIcon(icon2)
        self.bt_editar.setObjectName("bt_editar")
        self.line_nome = QtWidgets.QLineEdit(self.frame_2)
        self.line_nome.setGeometry(QtCore.QRect(20, 10, 151, 20))
        self.line_nome.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.line_nome.setClearButtonEnabled(False)
        self.line_nome.setObjectName("line_nome")
        self.bt_buscar = QtWidgets.QPushButton(self.frame_2)
        self.bt_buscar.setGeometry(QtCore.QRect(178, 9, 91, 23))
        icon3 = QtGui.QIcon()
        icon3.addPixmap(QtGui.QPixmap(":/buscar/buscar.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.bt_buscar.setIcon(icon3)
        self.bt_buscar.setObjectName("bt_buscar")
        self.verticalLayout_2.addWidget(self.frame_2)
        self.frame_3 = QtWidgets.QFrame(self.frame)
        self.frame_3.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_3.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_3.setObjectName("frame_3")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.frame_3)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.tb_consulta = QtWidgets.QTableWidget(self.frame_3)
        self.tb_consulta.setAlternatingRowColors(True)
        self.tb_consulta.setSelectionBehavior(QtWidgets.QAbstractItemView.SelectRows)
        self.tb_consulta.setObjectName("tb_consulta")
        self.tb_consulta.setColumnCount(5)
        self.tb_consulta.setRowCount(0)
        item = QtWidgets.QTableWidgetItem()
        self.tb_consulta.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tb_consulta.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.tb_consulta.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.tb_consulta.setHorizontalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        self.tb_consulta.setHorizontalHeaderItem(4, item)
        self.tb_consulta.horizontalHeader().setVisible(True)
        self.tb_consulta.verticalHeader().setVisible(False)
        self.horizontalLayout.addWidget(self.tb_consulta)
        self.verticalLayout_2.addWidget(self.frame_3)
        self.verticalLayout.addWidget(self.frame)

        self.retranslateUi(Form)
        QtCore.QMetaObject.connectSlotsByName(Form)

    def retranslateUi(self, Form):
        _translate = QtCore.QCoreApplication.translate
        Form.setWindowTitle(_translate("Form", "Users_telegram"))
        self.bt_cadastrar.setText(_translate("Form", "Cadastrar"))
        self.bt_editar.setText(_translate("Form", "Editar"))
        self.line_nome.setPlaceholderText(_translate("Form", "   Nome do usuário"))
        self.bt_buscar.setText(_translate("Form", "Buscar"))
        item = self.tb_consulta.horizontalHeaderItem(0)
        item.setText(_translate("Form", "Id_tele"))
        item = self.tb_consulta.horizontalHeaderItem(1)
        item.setText(_translate("Form", "Nome"))
        item = self.tb_consulta.horizontalHeaderItem(2)
        item.setText(_translate("Form", "Id_Rca"))
        item = self.tb_consulta.horizontalHeaderItem(3)
        item.setText(_translate("Form", "Id_magento"))
        item = self.tb_consulta.horizontalHeaderItem(4)
        item.setText(_translate("Form", "Bloqueado"))
        self.bt_editar.setVisible(False)
        self.bt_buscar.clicked.connect(self.buscar_user)
        self.bt_cadastrar.clicked.connect(self.cadastrar_user)
        self.tb_consulta.itemSelectionChanged.connect(self.onItemSelected)
        self.bt_editar.clicked.connect(self.editar_user)


    ## inicio das funções da tela user_tele
        try:
            con = bd.conexao.conectarbot()
            cursor = con.cursor()
            sql = "SELECT id_tele,nome,cod_rca,cod_magento,bloqueado FROM users"
            cursor.execute(sql)
            resultados = cursor.fetchall()
            self.tb_consulta.setRowCount(len(resultados))
            for row,text in enumerate(resultados):
              for column,data in enumerate(text):
                self.tb_consulta.setItem(row, column, QTableWidgetItem(str(data)))

        except Exception as E:
            print(str(E))
        finally:
            cursor.close()
            con.close()
    def editar_user(self):
        self.Form = QtWidgets.QWidget()
        self.ui = Ui_Form_user_tele_update()
        self.ui.setupUi(self.Form)
        self.Form.show()
    def onItemSelected(self):
        self.bt_editar.setVisible(True)
        # Obtém a célula atualmente selecionada
        current_item = self.tb_consulta.currentItem()
        #id_tela = current_item.text()
        vglobal.vid_tele = self.tb_consulta.item(current_item.row(), 0).text()
        print("valor da tela")
 

    def buscar_user(self):
        nome = self.line_nome.text()
        if nome != '':
          try:
              con = bd.conexao.conectarbot()
              cursor = con.cursor()
              sql = f"SELECT id_tele,nome,cod_rca,cod_magento,bloqueado FROM users where nome like '%{nome}%'"
              cursor.execute(sql)
              resultados = cursor.fetchall()
              self.tb_consulta.setRowCount(len(resultados))
              for row,text in enumerate(resultados):
                for column,data in enumerate(text):
                  self.tb_consulta.setItem(row, column, QTableWidgetItem(str(data)))
  
          except Exception as E:
              print(str(E))
          finally:
              cursor.close()
              con.close()
        else:
           try:
            con = bd.conexao.conectarbot()
            cursor = con.cursor()
            sql = "SELECT id_tele,nome,cod_rca,cod_magento,bloqueado FROM users"
            cursor.execute(sql)
            resultados = cursor.fetchall()
            self.tb_consulta.setRowCount(len(resultados))
            for row,text in enumerate(resultados):
              for column,data in enumerate(text):
                self.tb_consulta.setItem(row, column, QTableWidgetItem(str(data)))

           except Exception as E:
               print(str(E))
           finally:
               cursor.close()
               con.close()
           
    def cadastrar_user(self):
       vglobal.vtexto_bt_cad = "Salvar"
       self.Form = QtWidgets.QWidget()
       self.ui = Ui_Form_user_tele_cad()
       self.ui.setupUi(self.Form)
       self.Form.show()
      
import icons.buscar
import IMAGENS_DEV_ENERGY.fundo
import IMAGENS_DEV_ENERGY.soui


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    Form = QtWidgets.QWidget()
    ui = Ui_Form_user_tele()
    ui.setupUi(Form)
    Form.show()
    sys.exit(app.exec_())
